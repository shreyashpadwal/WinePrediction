version: '3.8'

# Development override for docker-compose.yml
# Usage: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

services:
  # Backend API Service - Development Mode
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: builder  # Use builder stage for development
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - PYTHONUNBUFFERED=1
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
    volumes:
      # Mount source code for hot reload
      - ./backend:/app
      - /app/__pycache__  # Exclude Python cache
      - /app/.pytest_cache  # Exclude pytest cache
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8000/api/v1/prediction/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

  # Frontend Service - Development Mode
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    environment:
      - VITE_API_URL=http://localhost:8000/api/v1
      - NODE_ENV=development
    volumes:
      # Mount source code for hot reload
      - ./frontend:/app
      - /app/node_modules  # Exclude node_modules
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
    ports:
      - "3000:3000"  # Vite dev server port
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

  # Redis Cache - Development Mode
  redis:
    volumes:
      - redis_dev_data:/data
    command: ["redis-server", "--appendonly", "yes", "--loglevel", "debug"]

# Development volumes
volumes:
  redis_dev_data:
    driver: local
